name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

      # Used to host cibuildwheel
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.1.3

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_BEFORE_BUILD: "pip install setuptools-rust"
          CIBW_BEFORE_BUILD_LINUX: "yum install -y openssl-devel && source scripts/install_rust.sh"
          CIBW_BEFORE_BUILD_MACOS: "source scripts/install_rust.sh"
          CIBW_BEFORE_BUILD_WINDOWS: "scripts\\prepare.bat"
          CIBW_ENVIRONMENT_LINUX: "PATH=$PATH:$HOME/.cargo/bin"
          CIBW_ENVIRONMENT_MACOS: "PATH=$PATH:$HOME/.cargo/bin"
          CIBW_SKIP: "pp*"
          CIBW_ENVIRONMENT_WINDOWS: >-
            LIB="LIB;$LIB"
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install setuptools and setuptools-rust
        run: |
          python -m pip install --upgrade wheel setuptools setuptools-rust
      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}